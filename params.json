{"name":"Cutlet","tagline":"Slicing and dicing XML and JSON","body":"Overview\r\n========\r\n\r\nCutlet is a library to make working with XML and JSON simple, particularly where a JavaBean\r\nJAXB-style approach is too heavyweight.\r\n\r\nCutlet supports:\r\n- The same interface for XML and JSON (with minor differences to account for the differences between these)\r\n- Both reading and writing of XML and JSON\r\n- Using [XPath](http://en.wikipedia.org/wiki/XPath) to select nodes\r\n- A nested approach, ie extracting sub-documents and working with them in the same manner as full documents\r\n\r\nExample\r\n=======\r\n\r\nGiven an XML file containing a list of people and their home and mobile phone numbers\r\n([input.xml](src/test/resources/org/snellm/cutlet/example/input.xml)), output a JSON associative array of their mobile\r\nphone numbers to names, changing the keys for first and last name\r\n([output.json](src/test/resources/org/snellm/cutlet/example/output.json)):\r\n\r\n````java\r\nCutlet input = XMLCutlet.parse(readFile(\"input.xml\"));\r\nCutlet output = JSONCutlet.create();\r\n\r\nfor (Cutlet person : input.getArray(\"person\")) {\r\n    output.add(\"mobile-\" + person.getString(\"phonenumber[@type = 'mobile']\"))\r\n        .addString(\"forename\", person.getString(\"firstname\"))\r\n        .addString(\"surname\", person.getString(\"lastname\"));\r\n}\r\n\r\nString json = JSONCutlet.print(output);\r\n````    \r\n\r\nSee the [JSON](src/test/java/org/snellm/cutlet/JSONCutletTest.java) and [XML](src/test/java/org/snellm/cutlet/XMLCutletTest.java) tests cases for more examples.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}